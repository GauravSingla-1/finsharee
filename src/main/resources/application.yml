# FinShare API Gateway Configuration
server:
  port: 5000
  address: 0.0.0.0

spring:
  application:
    name: finshare-api-gateway
  
  # Redis configuration for rate limiting (disabled for development)
  # redis:
  #   host: ${REDIS_HOST:localhost}
  #   port: ${REDIS_PORT:6379}
  #   password: ${REDIS_PASSWORD:}
  #   database: 0
  #   timeout: 2000ms
  #   lettuce:
  #     pool:
  #       max-active: 8
  #       max-idle: 8
  #       min-idle: 0
  #       max-wait: -1ms

  # Cloud Gateway configuration
  cloud:
    gateway:
      # Global timeout configuration
      httpclient:
        connect-timeout: 10000
        response-timeout: 30s

# Firebase configuration
firebase:
  project-id: ${FIREBASE_PROJECT_ID:finshare-app}
  service-account-key: ${FIREBASE_SERVICE_ACCOUNT_KEY:}

# Downstream service URLs
services:
  user-service:
    url: ${USER_SERVICE_URL:http://localhost:8001}
  group-expense-service:
    url: ${GROUP_EXPENSE_SERVICE_URL:http://localhost:8002}
  balance-settlement-service:
    url: ${BALANCE_SETTLEMENT_SERVICE_URL:http://localhost:8003}
  ai-service:
    url: ${AI_SERVICE_URL:http://localhost:8004}
  analytics-insights-service:
    url: ${ANALYTICS_INSIGHTS_SERVICE_URL:http://localhost:8005}

# Management and monitoring
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
  endpoint:
    health:
      show-details: when-authorized
  health:
    redis:
      enabled: true

# Logging configuration
logging:
  level:
    com.finshare.gateway: INFO
    org.springframework.cloud.gateway: DEBUG
    org.springframework.security: DEBUG
    reactor.netty.http.client: DEBUG
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level [%logger{36}] - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level [%logger{36}] - %msg%n"

# Rate limiting configuration
rate-limiting:
  enabled: ${RATE_LIMITING_ENABLED:true}
  requests-per-minute: ${RATE_LIMIT_REQUESTS_PER_MINUTE:100}
  window-duration: ${RATE_LIMIT_WINDOW_DURATION:PT1M}

# CORS configuration
cors:
  allowed-origins: ${CORS_ALLOWED_ORIGINS:*}
  allowed-methods: ${CORS_ALLOWED_METHODS:GET,POST,PUT,DELETE,OPTIONS,PATCH}
  allowed-headers: ${CORS_ALLOWED_HEADERS:*}
  allow-credentials: ${CORS_ALLOW_CREDENTIALS:true}
  max-age: ${CORS_MAX_AGE:3600}
