modules = ["java-graalvm22.3", "nodejs-20", "python-3.11", "bash", "python3"]

[nix]
channel = "stable-24_05"
packages = ["cargo", "glibcLocales", "jq", "libiconv", "libxcrypt", "maven", "redis", "rustc"]

[workflows]
runButton = "Project"

[[workflows.workflow]]
name = "Project"
mode = "parallel"
author = "agent"

[[workflows.workflow.tasks]]
task = "workflow.run"
args = "Balance Settlement Service"

[[workflows.workflow.tasks]]
task = "workflow.run"
args = "Analytics Service"

[[workflows.workflow.tasks]]
task = "workflow.run"
args = "Notification Service"

[[workflows.workflow.tasks]]
task = "workflow.run"
args = "Group Expense Service"

[[workflows.workflow.tasks]]
task = "workflow.run"
args = "AI Service"

[[workflows.workflow.tasks]]
task = "workflow.run"
args = "FinShare Backend"

[[workflows.workflow.tasks]]
task = "workflow.run"
args = "Expo App"

[[workflows.workflow.tasks]]
task = "workflow.run"
args = "Backend"

[[workflows.workflow.tasks]]
task = "workflow.run"
args = "Web Dashboard"

[[workflows.workflow.tasks]]
task = "workflow.run"
args = "CORS Proxy"

[[workflows.workflow]]
name = "Balance Settlement Service"
author = "agent"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "cd services/balance-settlement-service && mvn spring-boot:run -Dspring-boot.run.jvmArguments=\"-Dserver.port=8003\""
waitForPort = 8003

[[workflows.workflow]]
name = "Analytics Service"
author = "agent"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "cd services/analytics-insights-service && mvn spring-boot:run -Dspring-boot.run.jvmArguments=\"-Dserver.port=8005\""
waitForPort = 8005

[[workflows.workflow]]
name = "Notification Service"
author = "agent"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "cd services/notification-service && mvn spring-boot:run -Dspring-boot.run.jvmArguments=\"-Dserver.port=8006\""
waitForPort = 8006

[[workflows.workflow]]
name = "Group Expense Service"
author = "agent"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "cd services/group-expense-service && mvn spring-boot:run -Dspring-boot.run.jvmArguments=\"-Dserver.port=8002\""
waitForPort = 8002

[[workflows.workflow]]
name = "AI Service"
author = "agent"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "cd /home/runner/workspace/services/ai-service && python main.py"
waitForPort = 8004

[[workflows.workflow]]
name = "FinShare Backend"
author = "agent"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "cd /home/runner/workspace && python finshare-backend.py"
waitForPort = 9000

[[workflows.workflow]]
name = "Expo App"
author = "agent"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "cd /home/runner/workspace/expo-app && npx expo start --tunnel --clear"

[[workflows.workflow]]
name = "Backend"
author = "agent"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "cd /home/runner/workspace && python finshare-backend.py"
waitForPort = 5000

[[workflows.workflow]]
name = "Web Dashboard"
author = "agent"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "cd /home/runner/workspace/web-dashboard && python -m http.server 3000"
waitForPort = 3000

[[workflows.workflow]]
name = "CORS Proxy"
author = "agent"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "cd /home/runner/workspace/web-dashboard && python cors-proxy.py"
waitForPort = 3001

[deployment]
run = ["sh", "-c", "mvn clean compile spring-boot:run -Dspring-boot.run.jvmArguments=\"-Dserver.port=5000\""]

[[ports]]
localPort = 3000
externalPort = 6800

[[ports]]
localPort = 3001
externalPort = 8008

[[ports]]
localPort = 5000
externalPort = 80

[[ports]]
localPort = 6379
externalPort = 4200

[[ports]]
localPort = 8000
externalPort = 8000

[[ports]]
localPort = 8001
externalPort = 3000

[[ports]]
localPort = 8002
externalPort = 3001

[[ports]]
localPort = 8003
externalPort = 3002

[[ports]]
localPort = 8004
externalPort = 3003

[[ports]]
localPort = 8005
externalPort = 5000

[[ports]]
localPort = 8006
externalPort = 5173

[[ports]]
localPort = 8081
externalPort = 8081

[[ports]]
localPort = 8082
externalPort = 6000
